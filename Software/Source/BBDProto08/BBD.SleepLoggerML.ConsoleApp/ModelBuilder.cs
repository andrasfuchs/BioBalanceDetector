// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Microsoft.ML;
using Microsoft.ML.Data;
using BBD_SleepLoggerML.Model;
using Microsoft.ML.Trainers.LightGbm;

namespace BBD_SleepLoggerML.ConsoleApp
{
    public static class ModelBuilder
    {
        private static string TRAIN_DATA_FILEPATH = @"N:\Work\SleepLogger\2021-02-03_0-200Hz.csv";
        private static string MODEL_FILE = ConsumeModel.MLNetModelPath;

        // Create MLContext to be shared across the model creation workflow objects 
        // Set a random seed for repeatable/deterministic results across multiple trainings.
        private static MLContext mlContext = new MLContext(seed: 1);

        public static void CreateModel()
        {
            // Load Data
            IDataView trainingDataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: TRAIN_DATA_FILEPATH,
                                            hasHeader: false,
                                            separatorChar: ',',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Build training pipeline
            IEstimator<ITransformer> trainingPipeline = BuildTrainingPipeline(mlContext);

            // Train Model
            ITransformer mlModel = TrainModel(mlContext, trainingDataView, trainingPipeline);

            // Evaluate quality of Model
            Evaluate(mlContext, trainingDataView, trainingPipeline);

            // Save model
            SaveModel(mlContext, mlModel, MODEL_FILE, trainingDataView.Schema);
        }

        public static IEstimator<ITransformer> BuildTrainingPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations 
            var dataProcessPipeline = mlContext.Transforms.Concatenate("Features", new[] { "col0", "col1", "col2", "col3", "col4", "col5", "col6", "col7", "col8", "col9", "col10", "col11", "col12", "col13", "col14", "col15", "col16", "col17", "col18", "col19", "col20", "col21", "col22", "col23", "col24", "col25", "col26", "col27", "col28", "col29", "col30", "col31", "col32", "col33", "col34", "col35", "col36", "col37", "col38", "col39", "col40", "col41", "col42", "col43", "col44", "col45", "col46", "col47", "col48", "col49", "col50", "col51", "col52", "col53", "col54", "col55", "col56", "col57", "col58", "col59", "col60", "col61", "col62", "col63", "col64", "col65", "col66", "col67", "col68", "col69", "col70", "col71", "col72", "col73", "col74", "col75", "col76", "col77", "col78", "col79", "col80", "col81", "col82", "col83", "col84", "col85", "col86", "col87", "col88", "col89", "col90", "col91", "col92", "col93", "col94", "col95", "col96", "col97", "col98", "col99", "col100", "col101", "col102", "col103", "col104", "col105", "col106", "col107", "col108", "col109", "col110", "col111", "col112", "col113", "col114", "col115", "col116", "col117", "col118", "col119", "col120", "col121", "col122", "col123", "col124", "col125", "col126", "col127", "col128", "col129", "col130", "col131", "col132", "col133", "col134", "col135", "col136", "col137", "col138", "col139", "col140", "col141", "col142", "col143", "col144", "col145", "col146", "col147", "col148", "col149", "col150", "col151", "col152", "col153", "col154", "col155", "col156", "col157", "col158", "col159", "col160", "col161", "col162", "col163", "col164", "col165", "col166", "col167", "col168", "col169", "col170", "col171", "col172", "col173", "col174", "col175", "col176", "col177", "col178", "col179", "col180", "col181", "col182", "col183", "col184", "col185", "col186", "col187", "col188", "col189", "col190", "col191", "col192", "col193", "col194", "col195", "col196", "col197", "col198", "col199", "col200", "col201", "col202", "col203", "col204", "col205", "col206", "col207", "col208", "col209", "col210", "col211", "col212", "col213", "col214", "col215", "col216", "col217", "col218", "col219", "col220", "col221", "col222", "col223", "col224", "col225", "col226", "col227", "col228", "col229", "col230", "col231", "col232", "col233", "col234", "col235", "col236", "col237", "col238", "col239", "col240", "col241", "col242", "col243", "col244", "col245", "col246", "col247", "col248", "col249", "col250", "col251", "col252", "col253", "col254", "col255", "col256", "col257", "col258", "col259", "col260", "col261", "col262", "col263", "col264", "col265", "col266", "col267", "col268", "col269", "col270", "col271", "col272", "col273", "col274", "col275", "col276", "col277", "col278", "col279", "col280", "col281", "col282", "col283", "col284", "col285", "col286", "col287", "col288", "col289", "col290", "col291", "col292", "col293", "col294", "col295", "col296", "col297", "col298", "col299", "col300", "col301", "col302", "col303", "col304", "col305", "col306", "col307", "col308", "col309", "col310", "col311", "col312", "col313", "col314", "col315", "col316", "col317", "col318", "col319", "col320", "col321", "col322", "col323", "col324", "col325", "col326", "col327", "col328", "col329", "col330", "col331", "col332", "col333", "col334", "col335", "col336", "col337", "col338", "col339", "col340", "col341", "col342", "col343", "col344", "col345", "col346", "col347", "col348", "col349", "col350", "col351", "col352", "col353", "col354", "col355", "col356", "col357", "col358", "col359", "col360", "col361", "col362", "col363", "col364", "col365", "col366", "col367", "col368", "col369", "col370", "col371", "col372", "col373", "col374", "col375", "col376", "col377", "col378", "col379", "col380", "col381", "col382", "col383", "col384", "col385", "col386", "col387", "col388", "col389", "col390", "col391", "col392", "col393", "col394", "col395", "col396", "col397", "col398", "col399", "col400", "col401", "col402", "col403", "col404", "col405", "col406", "col407", "col408", "col409", "col410", "col411", "col412", "col413", "col414", "col415", "col416", "col417", "col418", "col419", "col420", "col421", "col422", "col423", "col424", "col425", "col426", "col427", "col428", "col429", "col430", "col431", "col432", "col433", "col434", "col435", "col436", "col437", "col438", "col439", "col440", "col441", "col442", "col443", "col444", "col445", "col446", "col447", "col448", "col449", "col450", "col451", "col452", "col453", "col454", "col455", "col456", "col457", "col458", "col459", "col460", "col461", "col462", "col463", "col464", "col465", "col466", "col467", "col468", "col469", "col470", "col471", "col472", "col473", "col474", "col475", "col476", "col477", "col478", "col479", "col480", "col481", "col482", "col483", "col484", "col485", "col486", "col487", "col488", "col489", "col490", "col491", "col492", "col493", "col494", "col495", "col496", "col497", "col498", "col499", "col500", "col501", "col502", "col503", "col504", "col505", "col506", "col507", "col508", "col509", "col510", "col511", "col512", "col513", "col514", "col515", "col516", "col517", "col518", "col519", "col520", "col521", "col522", "col523", "col524", "col525", "col526", "col527", "col528", "col529", "col530", "col531", "col532", "col533", "col534", "col535", "col536", "col537", "col538", "col539", "col540", "col541", "col542", "col543", "col544", "col545", "col546", "col547", "col548", "col549", "col550", "col551", "col552", "col553", "col554", "col555", "col556", "col557", "col558", "col559", "col560", "col561", "col562", "col563", "col564", "col565", "col566", "col567", "col568", "col569", "col570", "col571", "col572", "col573", "col574", "col575", "col576", "col577", "col578", "col579", "col580", "col581", "col582", "col583", "col584", "col585", "col586", "col587", "col588", "col589", "col590", "col591", "col592", "col593", "col594", "col595", "col596", "col597", "col598", "col599", "col600", "col601", "col602", "col603", "col604", "col605", "col606", "col607", "col608", "col609", "col610", "col611", "col612", "col613", "col614", "col615", "col616", "col617", "col618", "col619", "col620", "col621", "col622", "col623", "col624", "col625", "col626", "col627", "col628", "col629", "col630", "col631", "col632", "col633", "col634", "col635", "col636", "col637", "col638", "col639", "col640", "col641", "col642", "col643", "col644", "col645", "col646", "col647", "col648", "col649", "col650", "col651", "col652", "col653", "col654", "col655", "col656", "col657", "col658", "col659", "col660", "col661", "col662", "col663", "col664", "col665", "col666", "col667", "col668", "col669", "col670", "col671", "col672", "col673", "col674", "col675", "col676", "col677", "col678", "col679", "col680", "col681", "col682", "col683", "col684", "col685", "col686", "col687", "col688", "col689", "col690", "col691", "col692", "col693", "col694", "col695", "col696", "col697", "col698", "col699", "col700", "col701", "col702", "col703", "col704", "col705", "col706", "col707", "col708", "col709", "col710", "col711", "col712", "col713", "col714", "col715", "col716", "col717", "col718", "col719", "col720", "col721", "col722", "col723", "col724", "col725", "col726", "col727", "col728", "col729", "col730", "col731", "col732", "col733", "col734", "col735", "col736", "col737", "col738", "col739", "col740", "col741", "col742", "col743", "col744", "col745", "col746", "col747", "col748", "col749", "col750", "col751", "col752", "col753", "col754", "col755", "col756", "col757", "col758", "col759", "col760", "col761", "col762", "col763", "col764", "col765", "col766", "col767", "col768", "col769", "col770", "col771", "col772", "col773", "col774", "col775", "col776", "col777", "col778", "col779", "col780", "col781", "col782", "col783", "col784", "col785", "col786", "col787", "col788", "col789", "col790", "col791", "col792", "col793", "col794", "col795", "col796", "col797", "col798", "col799", "col800", "col801", "col802", "col803", "col804", "col805", "col806", "col807", "col808", "col809", "col810", "col811", "col812", "col813", "col814", "col815", "col816", "col817", "col818", "col819", "col820", "col821", "col822", "col823", "col824", "col825", "col826", "col827", "col828", "col829", "col830", "col831", "col832", "col833", "col834", "col835", "col836", "col837", "col838", "col839", "col840", "col841", "col842", "col843", "col844", "col845", "col846", "col847", "col848", "col849", "col850", "col851", "col852", "col853", "col854", "col855", "col856", "col857", "col858", "col859", "col860", "col861", "col862", "col863", "col864", "col865", "col866", "col867", "col868", "col869", "col870", "col871", "col872", "col873", "col874", "col875", "col876", "col877", "col878", "col879", "col880", "col881", "col882", "col883", "col884", "col885", "col886", "col887", "col888", "col889", "col890", "col891", "col892", "col893", "col894", "col895", "col896", "col897", "col898", "col899", "col900", "col901", "col902", "col903", "col904", "col905", "col906", "col907", "col908", "col909", "col910", "col911", "col912", "col913", "col914", "col915", "col916", "col917", "col918", "col919", "col920", "col921", "col922", "col923", "col924", "col925", "col926", "col927", "col928", "col929", "col930", "col931", "col932", "col933", "col934", "col935", "col936", "col937", "col938", "col939", "col940", "col941", "col942", "col943", "col944", "col945", "col946", "col947", "col948", "col949", "col950", "col951", "col952", "col953", "col954", "col955", "col956", "col957", "col958", "col959", "col960", "col961", "col962", "col963", "col964", "col965", "col966", "col967", "col968", "col969", "col970", "col971", "col972", "col973", "col974", "col975", "col976", "col977", "col978", "col979", "col980", "col981", "col982", "col983", "col984", "col985", "col986", "col987", "col988", "col989", "col990", "col991", "col992", "col993", "col994", "col995", "col996", "col997", "col998", "col999", "col1000", "col1001", "col1002", "col1003", "col1004", "col1005", "col1006", "col1007", "col1008", "col1009", "col1010", "col1011", "col1012", "col1013", "col1014", "col1015", "col1016", "col1017", "col1018", "col1019", "col1020", "col1021", "col1022", "col1023", "col1024", "col1025", "col1026", "col1027", "col1028", "col1029", "col1030", "col1031", "col1032", "col1033", "col1034", "col1035", "col1036", "col1037", "col1038", "col1039", "col1040", "col1041", "col1042", "col1043", "col1044", "col1045", "col1046", "col1047", "col1048", "col1049", "col1050", "col1051", "col1052", "col1053", "col1054", "col1055", "col1056", "col1057", "col1058", "col1059", "col1060", "col1061", "col1062", "col1063", "col1064", "col1065", "col1066", "col1067", "col1068", "col1069", "col1070", "col1071", "col1072", "col1073", "col1074", "col1075", "col1076", "col1077", "col1078", "col1079", "col1080", "col1081", "col1082", "col1083", "col1084", "col1085", "col1086", "col1087", "col1088", "col1089", "col1090", "col1091", "col1092", "col1093", "col1094", "col1095", "col1096", "col1097", "col1098", "col1099", "col1100", "col1101", "col1102", "col1103", "col1104", "col1105", "col1106", "col1107", "col1108", "col1109", "col1110", "col1111", "col1112", "col1113", "col1114", "col1115", "col1116", "col1117", "col1118", "col1119", "col1120", "col1121", "col1122", "col1123", "col1124", "col1125", "col1126", "col1127", "col1128", "col1129", "col1130", "col1131", "col1132", "col1133", "col1134", "col1135", "col1136", "col1137", "col1138", "col1139", "col1140", "col1141", "col1142", "col1143", "col1144", "col1145", "col1146", "col1147", "col1148", "col1149", "col1150", "col1151", "col1152", "col1153", "col1154", "col1155", "col1156", "col1157", "col1158", "col1159", "col1160", "col1161", "col1162", "col1163", "col1164", "col1165", "col1166", "col1167", "col1168", "col1169", "col1170", "col1171", "col1172", "col1173", "col1174", "col1175", "col1176", "col1177", "col1178", "col1179", "col1180", "col1181", "col1182", "col1183", "col1184", "col1185", "col1186", "col1187", "col1188", "col1189", "col1190", "col1191", "col1192", "col1193", "col1194", "col1195", "col1196", "col1197", "col1198", "col1199", "col1200", "col1201", "col1202", "col1203", "col1204", "col1205", "col1206", "col1207", "col1208", "col1209", "col1210", "col1211", "col1212", "col1213", "col1214", "col1215", "col1216", "col1217", "col1218", "col1219", "col1220", "col1221", "col1222", "col1223", "col1224", "col1225", "col1226", "col1227", "col1228", "col1229", "col1230", "col1231", "col1232", "col1233", "col1234", "col1235", "col1236", "col1237", "col1238", "col1239", "col1240", "col1241", "col1242", "col1243", "col1244", "col1245", "col1246", "col1247", "col1248", "col1249", "col1250", "col1251", "col1252", "col1253", "col1254", "col1255", "col1256", "col1257", "col1258", "col1259", "col1260", "col1261", "col1262", "col1263", "col1264", "col1265", "col1266", "col1267", "col1268", "col1269", "col1270", "col1271", "col1272", "col1273", "col1274", "col1275", "col1276", "col1277", "col1278", "col1279", "col1280", "col1281", "col1282", "col1283", "col1284", "col1285", "col1286", "col1287", "col1288", "col1289", "col1290", "col1291", "col1292", "col1293", "col1294", "col1295", "col1296", "col1297", "col1298", "col1299", "col1300", "col1301", "col1302", "col1303", "col1304", "col1305", "col1306", "col1307", "col1308", "col1309", "col1310", "col1311", "col1312", "col1313", "col1314", "col1315", "col1316", "col1317", "col1318", "col1319", "col1320", "col1321", "col1322", "col1323", "col1324", "col1325", "col1326", "col1327", "col1328", "col1329", "col1330", "col1331", "col1332", "col1333", "col1334", "col1335", "col1336", "col1337", "col1338", "col1339", "col1340", "col1341", "col1342", "col1343", "col1344", "col1345", "col1346", "col1347", "col1348", "col1349", "col1350", "col1351", "col1352", "col1353", "col1354", "col1355", "col1356", "col1357", "col1358", "col1359", "col1360", "col1361", "col1362", "col1363", "col1364", "col1365", "col1366", "col1367", "col1368", "col1369", "col1370", "col1371", "col1372", "col1373", "col1374", "col1375", "col1376", "col1377", "col1378", "col1379", "col1380", "col1381", "col1382", "col1383", "col1384", "col1385", "col1386", "col1387", "col1388", "col1389", "col1390", "col1391", "col1392", "col1393", "col1394", "col1395", "col1396", "col1397", "col1398", "col1399", "col1400", "col1401", "col1402", "col1403", "col1404", "col1405", "col1406", "col1407", "col1408", "col1409", "col1410", "col1411", "col1412", "col1413", "col1414", "col1415", "col1416", "col1417", "col1418", "col1419", "col1420", "col1421", "col1422", "col1423", "col1424", "col1425", "col1426", "col1427", "col1428", "col1429", "col1430", "col1431", "col1432", "col1433", "col1434", "col1435", "col1436", "col1437", "col1438", "col1439", "col1440", "col1441", "col1442", "col1443", "col1444", "col1445", "col1446", "col1447", "col1448", "col1449", "col1450", "col1451", "col1452", "col1453", "col1454", "col1455", "col1456", "col1457", "col1458", "col1459", "col1460", "col1461", "col1462", "col1463", "col1464", "col1465", "col1466", "col1467", "col1468", "col1469", "col1470", "col1471", "col1472", "col1473", "col1474", "col1475", "col1476", "col1477", "col1478", "col1479", "col1480", "col1481", "col1482", "col1483", "col1484", "col1485", "col1486", "col1487", "col1488", "col1489", "col1490", "col1491", "col1492", "col1493", "col1494", "col1495", "col1496", "col1497", "col1498", "col1499", "col1500", "col1501", "col1502", "col1503", "col1504", "col1505", "col1506", "col1507", "col1508", "col1509", "col1510", "col1511", "col1512", "col1513", "col1514", "col1515", "col1516", "col1517", "col1518", "col1519", "col1520", "col1521", "col1522", "col1523", "col1524", "col1525", "col1526", "col1527", "col1528", "col1529", "col1530", "col1531", "col1532", "col1533", "col1534", "col1535", "col1536", "col1537", "col1538", "col1539", "col1540", "col1541", "col1542", "col1543", "col1544", "col1545", "col1546", "col1547", "col1548", "col1549", "col1550", "col1551", "col1552", "col1553", "col1554", "col1555", "col1556", "col1557", "col1558", "col1559", "col1560", "col1561", "col1562", "col1563", "col1564", "col1565", "col1566", "col1567", "col1568", "col1569", "col1570", "col1571", "col1572", "col1573", "col1574", "col1575", "col1576", "col1577", "col1578", "col1579", "col1580", "col1581", "col1582", "col1583", "col1584", "col1585", "col1586", "col1587", "col1588", "col1589", "col1590", "col1591", "col1592", "col1593", "col1594", "col1595", "col1596", "col1597", "col1598", "col1599", "col1600", "col1601", "col1602", "col1603", "col1604", "col1605", "col1606", "col1607", "col1608", "col1609", "col1610", "col1611", "col1612", "col1613", "col1614", "col1615", "col1616", "col1617", "col1618", "col1619", "col1620", "col1621", "col1622", "col1623", "col1624", "col1625", "col1626", "col1627", "col1628", "col1629", "col1630", "col1631", "col1632", "col1633", "col1634", "col1635", "col1636", "col1637", "col1638", "col1639", "col1640", "col1641", "col1642", "col1643", "col1644", "col1645", "col1646", "col1647", "col1648", "col1649", "col1650", "col1651", "col1652", "col1653", "col1654", "col1655", "col1656", "col1657", "col1658", "col1659", "col1660", "col1661", "col1662", "col1663", "col1664", "col1665", "col1666", "col1667", "col1668", "col1669", "col1670", "col1671", "col1672", "col1673", "col1674", "col1675", "col1676", "col1677", "col1678", "col1679", "col1680", "col1681", "col1682", "col1683", "col1684", "col1685", "col1686", "col1687", "col1688", "col1689", "col1690", "col1691", "col1692", "col1693", "col1694", "col1695", "col1696", "col1697", "col1698", "col1699", "col1700", "col1701", "col1702", "col1703", "col1704", "col1705", "col1706", "col1707", "col1708", "col1709", "col1710", "col1711", "col1712", "col1713", "col1714", "col1715", "col1716", "col1717", "col1718", "col1719", "col1720", "col1721", "col1722", "col1723", "col1724", "col1725", "col1726", "col1727", "col1728", "col1729", "col1730", "col1731", "col1732", "col1733", "col1734", "col1735", "col1736", "col1737", "col1738", "col1739", "col1740", "col1741", "col1742", "col1743", "col1744", "col1745", "col1746", "col1747", "col1748", "col1749", "col1750", "col1751", "col1752", "col1753", "col1754", "col1755", "col1756", "col1757", "col1758", "col1759", "col1760", "col1761", "col1762", "col1763", "col1764", "col1765", "col1766", "col1767", "col1768", "col1769", "col1770", "col1771", "col1772", "col1773", "col1774", "col1775", "col1776", "col1777", "col1778", "col1779", "col1780", "col1781", "col1782", "col1783", "col1784", "col1785", "col1786", "col1787", "col1788", "col1789", "col1790", "col1791", "col1792", "col1793", "col1794", "col1795", "col1796", "col1797", "col1798", "col1799", "col1800", "col1801", "col1802", "col1803", "col1804", "col1805", "col1806", "col1807", "col1808", "col1809", "col1810", "col1811", "col1812", "col1813", "col1814", "col1815", "col1816", "col1817", "col1818", "col1819", "col1820", "col1821", "col1822", "col1823", "col1824", "col1825", "col1826", "col1827", "col1828", "col1829", "col1830", "col1831", "col1832", "col1833", "col1834", "col1835", "col1836", "col1837", "col1838", "col1839", "col1840", "col1841", "col1842", "col1843", "col1844", "col1845", "col1846", "col1847", "col1848", "col1849", "col1850", "col1851", "col1852", "col1853", "col1854", "col1855", "col1856", "col1857", "col1858", "col1859", "col1860", "col1861", "col1862", "col1863", "col1864", "col1865", "col1866", "col1867", "col1868", "col1869", "col1870", "col1871", "col1872", "col1873", "col1874", "col1875", "col1876", "col1877", "col1878", "col1879", "col1880", "col1881", "col1882", "col1883", "col1884", "col1885", "col1886", "col1887", "col1888", "col1889", "col1890", "col1891", "col1892", "col1893", "col1894", "col1895", "col1896", "col1897", "col1898", "col1899", "col1900", "col1901", "col1902", "col1903", "col1904", "col1905", "col1906", "col1907", "col1908", "col1909", "col1910", "col1911", "col1912", "col1913", "col1914", "col1915", "col1916", "col1917", "col1918", "col1919", "col1920", "col1921", "col1922", "col1923", "col1924", "col1925", "col1926", "col1927", "col1928", "col1929", "col1930", "col1931", "col1932", "col1933", "col1934", "col1935", "col1936", "col1937", "col1938", "col1939", "col1940", "col1941", "col1942", "col1943", "col1944", "col1945", "col1946", "col1947", "col1948", "col1949", "col1950", "col1951", "col1952", "col1953", "col1954", "col1955", "col1956", "col1957", "col1958", "col1959", "col1960", "col1961", "col1962", "col1963", "col1964", "col1965", "col1966", "col1967", "col1968", "col1969", "col1970", "col1971", "col1972", "col1973", "col1974", "col1975", "col1976", "col1977", "col1978", "col1979", "col1980", "col1981", "col1982", "col1983", "col1984", "col1985", "col1986", "col1987", "col1988", "col1989", "col1990", "col1991", "col1992", "col1993", "col1994", "col1995", "col1996", "col1997", "col1998", "col1999" });
            // Set the training algorithm 
            var trainer = mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options() { NumberOfIterations = 50, LearningRate = 0.1245455f, NumberOfLeaves = 4, MinimumExampleCountPerLeaf = 10, UseCategoricalSplit = false, HandleMissingValue = false, UseZeroAsMissingValue = true, MinimumExampleCountPerGroup = 200, MaximumCategoricalSplitPointCount = 8, CategoricalSmoothing = 20, L2CategoricalRegularization = 0.5, Booster = new GradientBooster.Options() { L2Regularization = 1, L1Regularization = 0.5 }, LabelColumnName = @"col2001", FeatureColumnName = "Features" });

            var trainingPipeline = dataProcessPipeline.Append(trainer);

            return trainingPipeline;
        }

        public static ITransformer TrainModel(MLContext mlContext, IDataView trainingDataView, IEstimator<ITransformer> trainingPipeline)
        {
            Console.WriteLine("=============== Training  model ===============");

            ITransformer model = trainingPipeline.Fit(trainingDataView);

            Console.WriteLine("=============== End of training process ===============");
            return model;
        }

        private static void Evaluate(MLContext mlContext, IDataView trainingDataView, IEstimator<ITransformer> trainingPipeline)
        {
            // Cross-Validate with single dataset (since we don't have two datasets, one for training and for evaluate)
            // in order to evaluate and get the model's accuracy metrics
            Console.WriteLine("=============== Cross-validating to get model's accuracy metrics ===============");
            var crossValidationResults = mlContext.Regression.CrossValidate(trainingDataView, trainingPipeline, numberOfFolds: 5, labelColumnName: "col2001");
            PrintRegressionFoldsAverageMetrics(crossValidationResults);
        }

        private static void SaveModel(MLContext mlContext, ITransformer mlModel, string modelRelativePath, DataViewSchema modelInputSchema)
        {
            // Save/persist the trained model to a .ZIP file
            Console.WriteLine($"=============== Saving the model  ===============");
            mlContext.Model.Save(mlModel, modelInputSchema, GetAbsolutePath(modelRelativePath));
            Console.WriteLine("The model is saved to {0}", GetAbsolutePath(modelRelativePath));
        }

        public static string GetAbsolutePath(string relativePath)
        {
            FileInfo _dataRoot = new FileInfo(typeof(Program).Assembly.Location);
            string assemblyFolderPath = _dataRoot.Directory.FullName;

            string fullPath = Path.Combine(assemblyFolderPath, relativePath);

            return fullPath;
        }

        public static void PrintRegressionMetrics(RegressionMetrics metrics)
        {
            Console.WriteLine($"*************************************************");
            Console.WriteLine($"*       Metrics for Regression model      ");
            Console.WriteLine($"*------------------------------------------------");
            Console.WriteLine($"*       LossFn:        {metrics.LossFunction:0.##}");
            Console.WriteLine($"*       R2 Score:      {metrics.RSquared:0.##}");
            Console.WriteLine($"*       Absolute loss: {metrics.MeanAbsoluteError:#.##}");
            Console.WriteLine($"*       Squared loss:  {metrics.MeanSquaredError:#.##}");
            Console.WriteLine($"*       RMS loss:      {metrics.RootMeanSquaredError:#.##}");
            Console.WriteLine($"*************************************************");
        }

        public static void PrintRegressionFoldsAverageMetrics(IEnumerable<TrainCatalogBase.CrossValidationResult<RegressionMetrics>> crossValidationResults)
        {
            var L1 = crossValidationResults.Select(r => r.Metrics.MeanAbsoluteError);
            var L2 = crossValidationResults.Select(r => r.Metrics.MeanSquaredError);
            var RMS = crossValidationResults.Select(r => r.Metrics.RootMeanSquaredError);
            var lossFunction = crossValidationResults.Select(r => r.Metrics.LossFunction);
            var R2 = crossValidationResults.Select(r => r.Metrics.RSquared);

            Console.WriteLine($"*************************************************************************************************************");
            Console.WriteLine($"*       Metrics for Regression model      ");
            Console.WriteLine($"*------------------------------------------------------------------------------------------------------------");
            Console.WriteLine($"*       Average L1 Loss:       {L1.Average():0.###} ");
            Console.WriteLine($"*       Average L2 Loss:       {L2.Average():0.###}  ");
            Console.WriteLine($"*       Average RMS:           {RMS.Average():0.###}  ");
            Console.WriteLine($"*       Average Loss Function: {lossFunction.Average():0.###}  ");
            Console.WriteLine($"*       Average R-squared:     {R2.Average():0.###}  ");
            Console.WriteLine($"*************************************************************************************************************");
        }
    }
}
